openapi: "3.0.0"
servers:
  - url: "http://localhost:3000"
    description: "API Backend"
info:
  title: "Gyms API仕様書"
  version: "1.0.0"
  description: "ジムのバックエンドで使用しているAPIの仕様書です。"
tags:
  - name: "member"
    description: "会員関連"
  - name: "payment"
    description: "支払い関連"
  - name: "payment_method"
    description: "支払い方法関連"
  - name: "membership_plan"
    description: "会員プラン関連"
  - name: "membership_status"
    description: "会員ステータス関連"
  - name: "usage_history"
    description: "利用履歴関連"
  - name: "equipment_reservation"
    description: "設備予約関連"

paths:
  /members:
    get:
      summary: "会員一覧取得"
      description: "全ての会員情報を取得します。"
      tags:
        - "member"
      responses:
        200:
          description: "成功時のレスポンス"
          content:
            application/json:
              schema:
                type: "array"
                items:
                  $ref: "#/components/schemas/Member"
    post:
      summary: "会員作成"
      description: "新しい会員を作成します。"
      tags:
        - "member"
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/MemberCreate"
      responses:
        201:
          description: "作成成功時のレスポンス"
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Member"

  /members/{member_id}:
    get:
      summary: "会員詳細取得"
      description: "指定されたmember_idの会員詳細情報を取得します。"
      tags:
        - "member"
      parameters:
        - name: "member_id"
          in: "path"
          description: "取得する会員のID"
          required: true
          schema:
            type: "integer"
          example: 1
      responses:
        200:
          description: "成功時のレスポンス"
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Member"
    put:
      summary: "会員更新"
      description: "指定されたmember_idの会員情報を更新します。"
      tags:
        - "member"
      parameters:
        - name: "member_id"
          in: "path"
          description: "更新する会員のID"
          required: true
          schema:
            type: "integer"
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/MemberUpdate"
      responses:
        200:
          description: "更新成功時のレスポンス"
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Member"
    delete:
      summary: "会員削除"
      description: "指定されたmember_idの会員を削除します。"
      tags:
        - "member"
      parameters:
        - name: "member_id"
          in: "path"
          description: "削除する会員のID"
          required: true
          schema:
            type: "integer"
      responses:
        204:
          description: "削除成功時のレスポンス"

  /payments:
    get:
      summary: "支払い一覧取得"
      description: "全ての支払い情報を取得します。"
      tags:
        - "payment"
      responses:
        200:
          description: "成功時のレスポンス"
          content:
            application/json:
              schema:
                type: "array"
                items:
                  $ref: "#/components/schemas/Payment"
    post:
      summary: "支払い作成"
      description: "新しい支払いを作成します。"
      tags:
        - "payment"
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/PaymentCreate"
      responses:
        201:
          description: "作成成功時のレスポンス"
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Payment"

  /payments/{payment_id}:
    get:
      summary: "支払い詳細取得"
      description: "指定されたpayment_idの支払い詳細情報を取得します。"
      tags:
        - "payment"
      parameters:
        - name: "payment_id"
          in: "path"
          description: "取得する支払いのID"
          required: true
          schema:
            type: "integer"
          example: 1
      responses:
        200:
          description: "成功時のレスポンス"
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Payment"
    put:
      summary: "支払い更新"
      description: "指定されたpayment_idの支払い情報を更新します。"
      tags:
        - "payment"
      parameters:
        - name: "payment_id"
          in: "path"
          description: "更新する支払いのID"
          required: true
          schema:
            type: "integer"
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/PaymentUpdate"
      responses:
        200:
          description: "更新成功時のレスポンス"
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Payment"
    delete:
      summary: "支払い削除"
      description: "指定されたpayment_idの支払いを削除します。"
      tags:
        - "payment"
      parameters:
        - name: "payment_id"
          in: "path"
          description: "削除する支払いのID"
          required: true
          schema:
            type: "integer"
      responses:
        204:
          description: "削除成功時のレスポンス"

  /payment_methods:
    get:
      summary: "支払い方法一覧取得"
      description: "全ての支払い方法を取得します。"
      tags:
        - "payment_method"
      responses:
        200:
          description: "成功時のレスポンス"
          content:
            application/json:
              schema:
                type: "array"
                items:
                  $ref: "#/components/schemas/PaymentMethod"
    post:
      summary: "支払い方法作成"
      description: "新しい支払い方法を作成します。"
      tags:
        - "payment_method"
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/PaymentMethodCreate"
      responses:
        201:
          description: "作成成功時のレスポンス"
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/PaymentMethod"

  /payment_methods/{payment_method_id}:
    get:
      summary: "支払い方法詳細取得"
      description: "指定されたpayment_method_idの支払い方法詳細情報を取得します。"
      tags:
        - "payment_method"
      parameters:
        - name: "payment_method_id"
          in: "path"
          description: "取得する支払い方法のID"
          required: true
          schema:
            type: "integer"
          example: 1
      responses:
        200:
          description: "成功時のレスポンス"
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/PaymentMethod"
    put:
      summary: "支払い方法更新"
      description: "指定されたpayment_method_idの支払い方法を更新します。"
      tags:
        - "payment_method"
      parameters:
        - name: "payment_method_id"
          in: "path"
          description: "更新する支払い方法のID"
          required: true
          schema:
            type: "integer"
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/PaymentMethodUpdate"
      responses:
        200:
          description: "更新成功時のレスポンス"
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/PaymentMethod"
    delete:
      summary: "支払い方法削除"
      description: "指定されたpayment_method_idの支払い方法を削除します。"
      tags:
        - "payment_method"
      parameters:
        - name: "payment_method_id"
          in: "path"
          description: "削除する支払い方法のID"
          required: true
          schema:
            type: "integer"
      responses:
        204:
          description: "削除成功時のレスポンス"

  /membership_plans:
    get:
      summary: "会員プラン一覧取得"
      description: "全ての会員プランを取得します。"
      tags:
        - "membership_plan"
      responses:
        200:
          description: "成功時のレスポンス"
          content:
            application/json:
              schema:
                type: "array"
                items:
                  $ref: "#/components/schemas/MembershipPlan"
    post:
      summary: "会員プラン作成"
      description: "新しい会員プランを作成します。"
      tags:
        - "membership_plan"
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/MembershipPlanCreate"
      responses:
        201:
          description: "作成成功時のレスポンス"
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/MembershipPlan"

  /membership_plans/{membership_plan_id}:
    get:
      summary: "会員プラン詳細取得"
      description: "指定されたmembership_plan_idの会員プラン詳細情報を取得します。"
      tags:
        - "membership_plan"
      parameters:
        - name: "membership_plan_id"
          in: "path"
          description: "取得する会員プランのID"
          required: true
          schema:
            type: "integer"
          example: 1
      responses:
        200:
          description: "成功時のレスポンス"
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/MembershipPlan"
    put:
      summary: "会員プラン更新"
      description: "指定されたmembership_plan_idの会員プランを更新します。"
      tags:
        - "membership_plan"
      parameters:
        - name: "membership_plan_id"
          in: "path"
          description: "更新する会員プランのID"
          required: true
          schema:
            type: "integer"
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/MembershipPlanUpdate"
      responses:
        200:
          description: "更新成功時のレスポンス"
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/MembershipPlan"
    delete:
      summary: "会員プラン削除"
      description: "指定されたmembership_plan_idの会員プランを削除します。"
      tags:
        - "membership_plan"
      parameters:
        - name: "membership_plan_id"
          in: "path"
          description: "削除する会員プランのID"
          required: true
          schema:
            type: "integer"
      responses:
        204:
          description: "削除成功時のレスポンス"

  /membership_statuses:
    get:
      summary: "会員ステータス一覧取得"
      description: "全ての会員ステータスを取得します。"
      tags:
        - "membership_status"
      responses:
        200:
          description: "成功時のレスポンス"
          content:
            application/json:
              schema:
                type: "array"
                items:
                  $ref: "#/components/schemas/MembershipStatus"
    post:
      summary: "会員ステータス作成"
      description: "新しい会員ステータスを作成します。"
      tags:
        - "membership_status"
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/MembershipStatusCreate"
      responses:
        201:
          description: "作成成功時のレスポンス"
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/MembershipStatus"

  /membership_statuses/{membership_status_id}:
    get:
      summary: "会員ステータス詳細取得"
      description: "指定されたmembership_status_idの会員ステータス詳細情報を取得します。"
      tags:
        - "membership_status"
      parameters:
        - name: "membership_status_id"
          in: "path"
          description: "取得する会員ステータスのID"
          required: true
          schema:
            type: "integer"
          example: 1
      responses:
        200:
          description: "成功時のレスポンス"
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/MembershipStatus"
    put:
      summary: "会員ステータス更新"
      description: "指定されたmembership_status_idの会員ステータスを更新します。"
      tags:
        - "membership_status"
      parameters:
        - name: "membership_status_id"
          in: "path"
          description: "更新する会員ステータスのID"
          required: true
          schema:
            type: "integer"
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/MembershipStatusUpdate"
      responses:
        200:
          description: "更新成功時のレスポンス"
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/MembershipStatus"
    delete:
      summary: "会員ステータス削除"
      description: "指定されたmembership_status_idの会員ステータスを削除します。"
      tags:
        - "membership_status"
      parameters:
        - name: "membership_status_id"
          in: "path"
          description: "削除する会員ステータスのID"
          required: true
          schema:
            type: "integer"
      responses:
        204:
          description: "削除成功時のレスポンス"

  /usage_histories:
    get:
      summary: "利用履歴一覧取得"
      description: "全ての利用履歴を取得します。"
      tags:
        - "usage_history"
      responses:
        200:
          description: "成功時のレスポンス"
          content:
            application/json:
              schema:
                type: "array"
                items:
                  $ref: "#/components/schemas/UsageHistory"
    post:
      summary: "利用履歴作成"
      description: "新しい利用履歴を作成します。"
      tags:
        - "usage_history"
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/UsageHistoryCreate"
      responses:
        201:
          description: "作成成功時のレスポンス"
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/UsageHistory"

  /usage_histories/{usage_history_id}:
    get:
      summary: "利用履歴詳細取得"
      description: "指定されたusage_history_idの利用履歴詳細情報を取得します。"
      tags:
        - "usage_history"
      parameters:
        - name: "usage_history_id"
          in: "path"
          description: "取得する利用履歴のID"
          required: true
          schema:
            type: "integer"
          example: 1
      responses:
        200:
          description: "成功時のレスポンス"
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/UsageHistory"
    put:
      summary: "利用履歴更新"
      description: "指定されたusage_history_idの利用履歴を更新します。"
      tags:
        - "usage_history"
      parameters:
        - name: "usage_history_id"
          in: "path"
          description: "更新する利用履歴のID"
          required: true
          schema:
            type: "integer"
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/UsageHistoryUpdate"
      responses:
        200:
          description: "更新成功時のレスポンス"
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/UsageHistory"
    delete:
      summary: "利用履歴削除"
      description: "指定されたusage_history_idの利用履歴を削除します。"
      tags:
        - "usage_history"
      parameters:
        - name: "usage_history_id"
          in: "path"
          description: "削除する利用履歴のID"
          required: true
          schema:
            type: "integer"
      responses:
        204:
          description: "削除成功時のレスポンス"

  /equipment_reservations:
    get:
      summary: "設備予約一覧取得"
      description: "全ての設備予約を取得します。"
      tags:
        - "equipment_reservation"
      responses:
        200:
          description: "成功時のレスポンス"
          content:
            application/json:
              schema:
                type: "array"
                items:
                  $ref: "#/components/schemas/EquipmentReservation"
    post:
      summary: "設備予約作成"
      description: "新しい設備予約を作成します。"
      tags:
        - "equipment_reservation"
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/EquipmentReservationCreate"
      responses:
        201:
          description: "作成成功時のレスポンス"
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/EquipmentReservation"

  /equipment_reservations/{equipment_reservation_id}:
    get:
      summary: "設備予約詳細取得"
      description: "指定されたequipment_reservation_idの設備予約詳細情報を取得します。"
      tags:
        - "equipment_reservation"
      parameters:
        - name: "equipment_reservation_id"
          in: "path"
          description: "取得する設備予約のID"
          required: true
          schema:
            type: "integer"
          example: 1
      responses:
        200:
          description: "成功時のレスポンス"
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/EquipmentReservation"
    put:
      summary: "設備予約更新"
      description: "指定されたequipment_reservation_idの設備予約を更新します。"
      tags:
        - "equipment_reservation"
      parameters:
        - name: "equipment_reservation_id"
          in: "path"
          description: "更新する設備予約のID"
          required: true
          schema:
            type: "integer"
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/EquipmentReservationUpdate"
      responses:
        200:
          description: "更新成功時のレスポンス"
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/EquipmentReservation"
    delete:
      summary: "設備予約削除"
      description: "指定されたequipment_reservation_idの設備予約を削除します。"
      tags:
        - "equipment_reservation"
      parameters:
        - name: "equipment_reservation_id"
          in: "path"
          description: "削除する設備予約のID"
          required: true
          schema:
            type: "integer"
      responses:
        204:
          description: "削除成功時のレスポンス"

components:
  schemas:
    Member:
      type: "object"
      properties:
        id:
          type: "integer"
          example: 1
        first_name:
          type: "string"
          example: "Taro"
        last_name:
          type: "string"
          example: "Yamada"
        email:
          type: "string"
          example: "taro.yamada@example.com"
        phone_number:
          type: "string"
          example: "090-1234-5678"
        membership_plan_id:
          type: "integer"
          example: 1
        join_date:
          type: "string"
          format: "date"
          example: "2024-09-03"
        membership_status_id:
          type: "integer"
          example: 1
        created_at:
          type: "string"
          format: "date-time"
          example: "2024-10-03T13:31:51Z"
        updated_at:
          type: "string"
          format: "date-time"
          example: "2024-10-03T13:31:51Z"

    MemberCreate:
      type: "object"
      required:
        - first_name
        - last_name
        - email
        - membership_plan_id
        - join_date
        - membership_status_id
      properties:
        first_name:
          type: "string"
          example: "Taro"
        last_name:
          type: "string"
          example: "Yamada"
        email:
          type: "string"
          example: "taro.yamada@example.com"
        phone_number:
          type: "string"
          example: "090-1234-5678"
        membership_plan_id:
          type: "integer"
          example: 1
        join_date:
          type: "string"
          format: "date"
          example: "2024-09-03"
        membership_status_id:
          type: "integer"
          example: 1

    MemberUpdate:
      type: "object"
      properties:
        first_name:
          type: "string"
          example: "Taro"
        last_name:
          type: "string"
          example: "Yamada"
        email:
          type: "string"
          example: "taro.yamada@example.com"
        phone_number:
          type: "string"
          example: "090-1234-5678"
        membership_plan_id:
          type: "integer"
          example: 1
        join_date:
          type: "string"
          format: "date"
          example: "2024-09-03"
        membership_status_id:
          type: "integer"
          example: 1

    Payment:
      type: "object"
      properties:
        id:
          type: "integer"
          example: 1
        member_id:
          type: "integer"
          example: 1
        amount:
          type: "number"
          format: "decimal"
          example: 10000.00
        payment_date:
          type: "string"
          format: "date-time"
          example: "2024-09-03T22:56:03Z"
        payment_method_id:
          type: "integer"
          example: 1
        membership_plan_id:
          type: "integer"
          example: 1
        created_at:
          type: "string"
          format: "date-time"
          example: "2024-10-03T22:56:03Z"
        updated_at:
          type: "string"
          format: "date-time"
          example: "2024-10-03T22:56:03Z"

    PaymentCreate:
      type: "object"
      required:
        - member_id
        - amount
        - payment_date
        - payment_method_id
        - membership_plan_id
      properties:
        member_id:
          type: "integer"
          example: 1
        amount:
          type: "number"
          format: "decimal"
          example: 10000.00
        payment_date:
          type: "string"
          format: "date-time"
          example: "2024-09-03T22:56:03Z"
        payment_method_id:
          type: "integer"
          example: 1
        membership_plan_id:
          type: "integer"
          example: 1

    PaymentUpdate:
      type: "object"
      properties:
        member_id:
          type: "integer"
          example: 1
        amount:
          type: "number"
          format: "decimal"
          example: 10000.00
        payment_date:
          type: "string"
          format: "date-time"
          example: "2024-09-03T22:56:03Z"
        payment_method_id:
          type: "integer"
          example: 1
        membership_plan_id:
          type: "integer"
          example: 1

    PaymentMethod:
      type: "object"
      properties:
        id:
          type: "integer"
          example: 1
        method_name:
          type: "string"
          example: "クレジットカード"
        created_at:
          type: "string"
          format: "date-time"
          example: "2024-10-03T22:56:03Z"
        updated_at:
          type: "string"
          format: "date-time"
          example: "2024-10-03T22:56:03Z"

    PaymentMethodCreate:
      type: "object"
      required:
        - method_name
      properties:
        method_name:
          type: "string"
          example: "クレジットカード"

    PaymentMethodUpdate:
      type: "object"
      properties:
        method_name:
          type: "string"
          example: "銀行振込"

    MembershipPlan:
      type: "object"
      properties:
        id:
          type: "integer"
          example: 1
        name:
          type: "string"
          example: "月額"
        price:
          type: "number"
          format: "decimal"
          example: 10000.00
        duration_in_days:
          type: "integer"
          example: 30
        created_at:
          type: "string"
          format: "date-time"
          example: "2024-10-03T22:56:03Z"
        updated_at:
          type: "string"
          format: "date-time"
          example: "2024-10-03T22:56:03Z"

    MembershipPlanCreate:
      type: "object"
      required:
        - name
        - price
      properties:
        name:
          type: "string"
          example: "月額"
        price:
          type: "number"
          format: "decimal"
          example: 10000.00
        duration_in_days:
          type: "integer"
          example: 30

    MembershipPlanUpdate:
      type: "object"
      properties:
        name:
          type: "string"
          example: "月額"
        price:
          type: "number"
          format: "decimal"
          example: 10000.00
        duration_in_days:
          type: "integer"
          example: 30

    MembershipStatus:
      type: "object"
      properties:
        id:
          type: "integer"
          example: 1
        status_name:
          type: "string"
          example: "アクティブ"
        created_at:
          type: "string"
          format: "date-time"
          example: "2024-10-03T22:56:03Z"
        updated_at:
          type: "string"
          format: "date-time"
          example: "2024-10-03T22:56:03Z"

    MembershipStatusCreate:
      type: "object"
      required:
        - status_name
      properties:
        status_name:
          type: "string"
          example: "アクティブ"

    MembershipStatusUpdate:
      type: "object"
      properties:
        status_name:
          type: "string"
          example: "休会中"

    UsageHistory:
      type: "object"
      properties:
        id:
          type: "integer"
          example: 1
        member_id:
          type: "integer"
          example: 1
        check_in_time:
          type: "string"
          format: "date-time"
          example: "2024-10-02T15:31:51Z"
        check_out_time:
          type: "string"
          format: "date-time"
          example: "2024-10-02T16:31:51Z"
        created_at:
          type: "string"
          format: "date-time"
          example: "2024-10-03T15:31:51Z"
        updated_at:
          type: "string"
          format: "date-time"
          example: "2024-10-03T15:31:51Z"

    UsageHistoryCreate:
      type: "object"
      required:
        - member_id
        - check_in_time
      properties:
        member_id:
          type: "integer"
          example: 1
        check_in_time:
          type: "string"
          format: "date-time"
          example: "2024-10-02T15:31:51Z"
        check_out_time:
          type: "string"
          format: "date-time"
          example: "2024-10-02T16:31:51Z"

    UsageHistoryUpdate:
      type: "object"
      properties:
        member_id:
          type: "integer"
          example: 1
        check_in_time:
          type: "string"
          format: "date-time"
          example: "2024-10-02T15:31:51Z"
        check_out_time:
          type: "string"
          format: "date-time"
          example: "2024-10-02T16:31:51Z"

    EquipmentReservation:
      type: "object"
      properties:
        id:
          type: "integer"
          example: 1
        member_id:
          type: "integer"
          example: 1
        equipment_name:
          type: "string"
          example: "ランニングマシン1号機"
        reservation_time:
          type: "string"
          format: "date-time"
          example: "2024-10-04T15:31:51Z"
        created_at:
          type: "string"
          format: "date-time"
          example: "2024-10-03T15:31:51Z"
        updated_at:
          type: "string"
          format: "date-time"
          example: "2024-10-03T15:31:51Z"

    EquipmentReservationCreate:
      type: "object"
      required:
        - member_id
        - equipment_name
        - reservation_time
      properties:
        member_id:
          type: "integer"
          example: 1
        equipment_name:
          type: "string"
          example: "ランニングマシン1号機"
        reservation_time:
          type: "string"
          format: "date-time"
          example: "2024-10-04T15:31:51Z"

    EquipmentReservationUpdate:
      type: "object"
      properties:
        member_id:
          type: "integer"
          example: 1
        equipment_name:
          type: "string"
          example: "ランニングマシン2号機"
        reservation_time:
          type: "string"
          format: "date-time"
          example: "2024-10-05T15:31:51Z"

